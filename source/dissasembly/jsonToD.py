import json
# https://gist.github.com/HeronErin/377bd3bd7ec93f6b13e654259ec9edcd
inp = """[["rlc (iy+<var>d</var>),b","FD  CB  <var>d</var>  00"],["rlc (iy+<var>d</var>),c","FD  CB  <var>d</var>  01"],["rlc (iy+<var>d</var>),d","FD  CB  <var>d</var>  02"],["rlc (iy+<var>d</var>),e","FD  CB  <var>d</var>  03"],["rlc (iy+<var>d</var>),h","FD  CB  <var>d</var>  04"],["rlc (iy+<var>d</var>),l","FD  CB  <var>d</var>  05"],["rlc (iy+<var>d</var>)","FD  CB  <var>d</var>  06"],["rlc (iy+<var>d</var>),a","FD  CB  <var>d</var>  07"],["rrc (iy+<var>d</var>),b","FD  CB  <var>d</var>  08"],["rrc (iy+<var>d</var>),c","FD  CB  <var>d</var>  09"],["rrc (iy+<var>d</var>),d","FD  CB  <var>d</var>  0A"],["rrc (iy+<var>d</var>),e","FD  CB  <var>d</var>  0B"],["rrc (iy+<var>d</var>),h","FD  CB  <var>d</var>  0C"],["rrc (iy+<var>d</var>),l","FD  CB  <var>d</var>  0D"],["rrc (iy+<var>d</var>)","FD  CB  <var>d</var>  0E"],["rrc (iy+<var>d</var>),a","FD  CB  <var>d</var>  0F"],["rl (iy+<var>d</var>),b","FD  CB  <var>d</var>  10"],["rl (iy+<var>d</var>),c","FD  CB  <var>d</var>  11"],["rl (iy+<var>d</var>),d","FD  CB  <var>d</var>  12"],["rl (iy+<var>d</var>),e","FD  CB  <var>d</var>  13"],["rl (iy+<var>d</var>),h","FD  CB  <var>d</var>  14"],["rl (iy+<var>d</var>),l","FD  CB  <var>d</var>  15"],["rl (iy+<var>d</var>)","FD  CB  <var>d</var>  16"],["rl (iy+<var>d</var>),a","FD  CB  <var>d</var>  17"],["rr (iy+<var>d</var>),b","FD  CB  <var>d</var>  18"],["rr (iy+<var>d</var>),c","FD  CB  <var>d</var>  19"],["rr (iy+<var>d</var>),d","FD  CB  <var>d</var>  1A"],["rr (iy+<var>d</var>),e","FD  CB  <var>d</var>  1B"],["rr (iy+<var>d</var>),h","FD  CB  <var>d</var>  1C"],["rr (iy+<var>d</var>),l","FD  CB  <var>d</var>  1D"],["rr (iy+<var>d</var>)","FD  CB  <var>d</var>  1E"],["rr (iy+<var>d</var>),a","FD  CB  <var>d</var>  1F"],["sla (iy+<var>d</var>),b","FD  CB  <var>d</var>  20"],["sla (iy+<var>d</var>),c","FD  CB  <var>d</var>  21"],["sla (iy+<var>d</var>),d","FD  CB  <var>d</var>  22"],["sla (iy+<var>d</var>),e","FD  CB  <var>d</var>  23"],["sla (iy+<var>d</var>),h","FD  CB  <var>d</var>  24"],["sla (iy+<var>d</var>),l","FD  CB  <var>d</var>  25"],["sla (iy+<var>d</var>)","FD  CB  <var>d</var>  26"],["sla (iy+<var>d</var>),a","FD  CB  <var>d</var>  27"],["sra (iy+<var>d</var>),b","FD  CB  <var>d</var>  28"],["sra (iy+<var>d</var>),c","FD  CB  <var>d</var>  29"],["sra (iy+<var>d</var>),d","FD  CB  <var>d</var>  2A"],["sra (iy+<var>d</var>),e","FD  CB  <var>d</var>  2B"],["sra (iy+<var>d</var>),h","FD  CB  <var>d</var>  2C"],["sra (iy+<var>d</var>),l","FD  CB  <var>d</var>  2D"],["sra (iy+<var>d</var>)","FD  CB  <var>d</var>  2E"],["sra (iy+<var>d</var>),a","FD  CB  <var>d</var>  2F"],["sll (iy+<var>d</var>),b","FD  CB  <var>d</var>  30"],["sll (iy+<var>d</var>),c","FD  CB  <var>d</var>  31"],["sll (iy+<var>d</var>),d","FD  CB  <var>d</var>  32"],["sll (iy+<var>d</var>),e","FD  CB  <var>d</var>  33"],["sll (iy+<var>d</var>),h","FD  CB  <var>d</var>  34"],["sll (iy+<var>d</var>),l","FD  CB  <var>d</var>  35"],["sll (iy+<var>d</var>)","FD  CB  <var>d</var>  36"],["sll (iy+<var>d</var>),a","FD  CB  <var>d</var>  37"],["srl (iy+<var>d</var>),b","FD  CB  <var>d</var>  38"],["srl (iy+<var>d</var>),c","FD  CB  <var>d</var>  39"],["srl (iy+<var>d</var>),d","FD  CB  <var>d</var>  3A"],["srl (iy+<var>d</var>),e","FD  CB  <var>d</var>  3B"],["srl (iy+<var>d</var>),h","FD  CB  <var>d</var>  3C"],["srl (iy+<var>d</var>),l","FD  CB  <var>d</var>  3D"],["srl (iy+<var>d</var>)","FD  CB  <var>d</var>  3E"],["srl (iy+<var>d</var>),a","FD  CB  <var>d</var>  3F"],["bit 0,(iy+<var>d</var>)","FD  CB  <var>d</var>  40"],["bit 0,(iy+<var>d</var>)","FD  CB  <var>d</var>  41"],["bit 0,(iy+<var>d</var>)","FD  CB  <var>d</var>  42"],["bit 0,(iy+<var>d</var>)","FD  CB  <var>d</var>  43"],["bit 0,(iy+<var>d</var>)","FD  CB  <var>d</var>  44"],["bit 0,(iy+<var>d</var>)","FD  CB  <var>d</var>  45"],["bit 0,(iy+<var>d</var>)","FD  CB  <var>d</var>  46"],["bit 0,(iy+<var>d</var>)","FD  CB  <var>d</var>  47"],["bit 1,(iy+<var>d</var>)","FD  CB  <var>d</var>  48"],["bit 1,(iy+<var>d</var>)","FD  CB  <var>d</var>  49"],["bit 1,(iy+<var>d</var>)","FD  CB  <var>d</var>  4A"],["bit 1,(iy+<var>d</var>)","FD  CB  <var>d</var>  4B"],["bit 1,(iy+<var>d</var>)","FD  CB  <var>d</var>  4C"],["bit 1,(iy+<var>d</var>)","FD  CB  <var>d</var>  4D"],["bit 1,(iy+<var>d</var>)","FD  CB  <var>d</var>  4E"],["bit 1,(iy+<var>d</var>)","FD  CB  <var>d</var>  4F"],["bit 2,(iy+<var>d</var>)","FD  CB  <var>d</var>  50"],["bit 2,(iy+<var>d</var>)","FD  CB  <var>d</var>  51"],["bit 2,(iy+<var>d</var>)","FD  CB  <var>d</var>  52"],["bit 2,(iy+<var>d</var>)","FD  CB  <var>d</var>  53"],["bit 2,(iy+<var>d</var>)","FD  CB  <var>d</var>  54"],["bit 2,(iy+<var>d</var>)","FD  CB  <var>d</var>  55"],["bit 2,(iy+<var>d</var>)","FD  CB  <var>d</var>  56"],["bit 2,(iy+<var>d</var>)","FD  CB  <var>d</var>  57"],["bit 3,(iy+<var>d</var>)","FD  CB  <var>d</var>  58"],["bit 3,(iy+<var>d</var>)","FD  CB  <var>d</var>  59"],["bit 3,(iy+<var>d</var>)","FD  CB  <var>d</var>  5A"],["bit 3,(iy+<var>d</var>)","FD  CB  <var>d</var>  5B"],["bit 3,(iy+<var>d</var>)","FD  CB  <var>d</var>  5C"],["bit 3,(iy+<var>d</var>)","FD  CB  <var>d</var>  5D"],["bit 3,(iy+<var>d</var>)","FD  CB  <var>d</var>  5E"],["bit 3,(iy+<var>d</var>)","FD  CB  <var>d</var>  5F"],["bit 4,(iy+<var>d</var>)","FD  CB  <var>d</var>  60"],["bit 4,(iy+<var>d</var>)","FD  CB  <var>d</var>  61"],["bit 4,(iy+<var>d</var>)","FD  CB  <var>d</var>  62"],["bit 4,(iy+<var>d</var>)","FD  CB  <var>d</var>  63"],["bit 4,(iy+<var>d</var>)","FD  CB  <var>d</var>  64"],["bit 4,(iy+<var>d</var>)","FD  CB  <var>d</var>  65"],["bit 4,(iy+<var>d</var>)","FD  CB  <var>d</var>  66"],["bit 4,(iy+<var>d</var>)","FD  CB  <var>d</var>  67"],["bit 5,(iy+<var>d</var>)","FD  CB  <var>d</var>  68"],["bit 5,(iy+<var>d</var>)","FD  CB  <var>d</var>  69"],["bit 5,(iy+<var>d</var>)","FD  CB  <var>d</var>  6A"],["bit 5,(iy+<var>d</var>)","FD  CB  <var>d</var>  6B"],["bit 5,(iy+<var>d</var>)","FD  CB  <var>d</var>  6C"],["bit 5,(iy+<var>d</var>)","FD  CB  <var>d</var>  6D"],["bit 5,(iy+<var>d</var>)","FD  CB  <var>d</var>  6E"],["bit 5,(iy+<var>d</var>)","FD  CB  <var>d</var>  6F"],["bit 6,(iy+<var>d</var>)","FD  CB  <var>d</var>  70"],["bit 6,(iy+<var>d</var>)","FD  CB  <var>d</var>  71"],["bit 6,(iy+<var>d</var>)","FD  CB  <var>d</var>  72"],["bit 6,(iy+<var>d</var>)","FD  CB  <var>d</var>  73"],["bit 6,(iy+<var>d</var>)","FD  CB  <var>d</var>  74"],["bit 6,(iy+<var>d</var>)","FD  CB  <var>d</var>  75"],["bit 6,(iy+<var>d</var>)","FD  CB  <var>d</var>  76"],["bit 6,(iy+<var>d</var>)","FD  CB  <var>d</var>  77"],["bit 7,(iy+<var>d</var>)","FD  CB  <var>d</var>  78"],["bit 7,(iy+<var>d</var>)","FD  CB  <var>d</var>  79"],["bit 7,(iy+<var>d</var>)","FD  CB  <var>d</var>  7A"],["bit 7,(iy+<var>d</var>)","FD  CB  <var>d</var>  7B"],["bit 7,(iy+<var>d</var>)","FD  CB  <var>d</var>  7C"],["bit 7,(iy+<var>d</var>)","FD  CB  <var>d</var>  7D"],["bit 7,(iy+<var>d</var>)","FD  CB  <var>d</var>  7E"],["bit 7,(iy+<var>d</var>)","FD  CB  <var>d</var>  7F"],["res 0,(iy+<var>d</var>),b","FD  CB  <var>d</var>  80"],["res 0,(iy+<var>d</var>),c","FD  CB  <var>d</var>  81"],["res 0,(iy+<var>d</var>),d","FD  CB  <var>d</var>  82"],["res 0,(iy+<var>d</var>),e","FD  CB  <var>d</var>  83"],["res 0,(iy+<var>d</var>),h","FD  CB  <var>d</var>  84"],["res 0,(iy+<var>d</var>),l","FD  CB  <var>d</var>  85"],["res 0,(iy+<var>d</var>)","FD  CB  <var>d</var>  86"],["res 0,(iy+<var>d</var>),a","FD  CB  <var>d</var>  87"],["res 1,(iy+<var>d</var>),b","FD  CB  <var>d</var>  88"],["res 1,(iy+<var>d</var>),c","FD  CB  <var>d</var>  89"],["res 1,(iy+<var>d</var>),d","FD  CB  <var>d</var>  8A"],["res 1,(iy+<var>d</var>),e","FD  CB  <var>d</var>  8B"],["res 1,(iy+<var>d</var>),h","FD  CB  <var>d</var>  8C"],["res 1,(iy+<var>d</var>),l","FD  CB  <var>d</var>  8D"],["res 1,(iy+<var>d</var>)","FD  CB  <var>d</var>  8E"],["res 1,(iy+<var>d</var>),a","FD  CB  <var>d</var>  8F"],["res 2,(iy+<var>d</var>),b","FD  CB  <var>d</var>  90"],["res 2,(iy+<var>d</var>),c","FD  CB  <var>d</var>  91"],["res 2,(iy+<var>d</var>),d","FD  CB  <var>d</var>  92"],["res 2,(iy+<var>d</var>),e","FD  CB  <var>d</var>  93"],["res 2,(iy+<var>d</var>),h","FD  CB  <var>d</var>  94"],["res 2,(iy+<var>d</var>),l","FD  CB  <var>d</var>  95"],["res 2,(iy+<var>d</var>)","FD  CB  <var>d</var>  96"],["res 2,(iy+<var>d</var>),a","FD  CB  <var>d</var>  97"],["res 3,(iy+<var>d</var>),b","FD  CB  <var>d</var>  98"],["res 3,(iy+<var>d</var>),c","FD  CB  <var>d</var>  99"],["res 3,(iy+<var>d</var>),d","FD  CB  <var>d</var>  9A"],["res 3,(iy+<var>d</var>),e","FD  CB  <var>d</var>  9B"],["res 3,(iy+<var>d</var>),h","FD  CB  <var>d</var>  9C"],["res 3,(iy+<var>d</var>),l","FD  CB  <var>d</var>  9D"],["res 3,(iy+<var>d</var>)","FD  CB  <var>d</var>  9E"],["res 3,(iy+<var>d</var>),a","FD  CB  <var>d</var>  9F"],["res 4,(iy+<var>d</var>),b","FD  CB  <var>d</var>  A0"],["res 4,(iy+<var>d</var>),c","FD  CB  <var>d</var>  A1"],["res 4,(iy+<var>d</var>),d","FD  CB  <var>d</var>  A2"],["res 4,(iy+<var>d</var>),e","FD  CB  <var>d</var>  A3"],["res 4,(iy+<var>d</var>),h","FD  CB  <var>d</var>  A4"],["res 4,(iy+<var>d</var>),l","FD  CB  <var>d</var>  A5"],["res 4,(iy+<var>d</var>)","FD  CB  <var>d</var>  A6"],["res 4,(iy+<var>d</var>),a","FD  CB  <var>d</var>  A7"],["res 5,(iy+<var>d</var>),b","FD  CB  <var>d</var>  A8"],["res 5,(iy+<var>d</var>),c","FD  CB  <var>d</var>  A9"],["res 5,(iy+<var>d</var>),d","FD  CB  <var>d</var>  AA"],["res 5,(iy+<var>d</var>),e","FD  CB  <var>d</var>  AB"],["res 5,(iy+<var>d</var>),h","FD  CB  <var>d</var>  AC"],["res 5,(iy+<var>d</var>),l","FD  CB  <var>d</var>  AD"],["res 5,(iy+<var>d</var>)","FD  CB  <var>d</var>  AE"],["res 5,(iy+<var>d</var>),a","FD  CB  <var>d</var>  AF"],["res 6,(iy+<var>d</var>),b","FD  CB  <var>d</var>  B0"],["res 6,(iy+<var>d</var>),c","FD  CB  <var>d</var>  B1"],["res 6,(iy+<var>d</var>),d","FD  CB  <var>d</var>  B2"],["res 6,(iy+<var>d</var>),e","FD  CB  <var>d</var>  B3"],["res 6,(iy+<var>d</var>),h","FD  CB  <var>d</var>  B4"],["res 6,(iy+<var>d</var>),l","FD  CB  <var>d</var>  B5"],["res 6,(iy+<var>d</var>)","FD  CB  <var>d</var>  B6"],["res 6,(iy+<var>d</var>),a","FD  CB  <var>d</var>  B7"],["res 7,(iy+<var>d</var>),b","FD  CB  <var>d</var>  B8"],["res 7,(iy+<var>d</var>),c","FD  CB  <var>d</var>  B9"],["res 7,(iy+<var>d</var>),d","FD  CB  <var>d</var>  BA"],["res 7,(iy+<var>d</var>),e","FD  CB  <var>d</var>  BB"],["res 7,(iy+<var>d</var>),h","FD  CB  <var>d</var>  BC"],["res 7,(iy+<var>d</var>),l","FD  CB  <var>d</var>  BD"],["res 7,(iy+<var>d</var>)","FD  CB  <var>d</var>  BE"],["res 7,(iy+<var>d</var>),a","FD  CB  <var>d</var>  BF"],["set 0,(iy+<var>d</var>),b","FD  CB  <var>d</var>  C0"],["set 0,(iy+<var>d</var>),c","FD  CB  <var>d</var>  C1"],["set 0,(iy+<var>d</var>),d","FD  CB  <var>d</var>  C2"],["set 0,(iy+<var>d</var>),e","FD  CB  <var>d</var>  C3"],["set 0,(iy+<var>d</var>),h","FD  CB  <var>d</var>  C4"],["set 0,(iy+<var>d</var>),l","FD  CB  <var>d</var>  C5"],["set 0,(iy+<var>d</var>)","FD  CB  <var>d</var>  C6"],["set 0,(iy+<var>d</var>),a","FD  CB  <var>d</var>  C7"],["set 1,(iy+<var>d</var>),b","FD  CB  <var>d</var>  C8"],["set 1,(iy+<var>d</var>),c","FD  CB  <var>d</var>  C9"],["set 1,(iy+<var>d</var>),d","FD  CB  <var>d</var>  CA"],["set 1,(iy+<var>d</var>),e","FD  CB  <var>d</var>  CB"],["set 1,(iy+<var>d</var>),h","FD  CB  <var>d</var>  CC"],["set 1,(iy+<var>d</var>),l","FD  CB  <var>d</var>  CD"],["set 1,(iy+<var>d</var>)","FD  CB  <var>d</var>  CE"],["set 1,(iy+<var>d</var>),a","FD  CB  <var>d</var>  CF"],["set 2,(iy+<var>d</var>),b","FD  CB  <var>d</var>  D0"],["set 2,(iy+<var>d</var>),c","FD  CB  <var>d</var>  D1"],["set 2,(iy+<var>d</var>),d","FD  CB  <var>d</var>  D2"],["set 2,(iy+<var>d</var>),e","FD  CB  <var>d</var>  D3"],["set 2,(iy+<var>d</var>),h","FD  CB  <var>d</var>  D4"],["set 2,(iy+<var>d</var>),l","FD  CB  <var>d</var>  D5"],["set 2,(iy+<var>d</var>)","FD  CB  <var>d</var>  D6"],["set 2,(iy+<var>d</var>),a","FD  CB  <var>d</var>  D7"],["set 3,(iy+<var>d</var>),b","FD  CB  <var>d</var>  D8"],["set 3,(iy+<var>d</var>),c","FD  CB  <var>d</var>  D9"],["set 3,(iy+<var>d</var>),d","FD  CB  <var>d</var>  DA"],["set 3,(iy+<var>d</var>),e","FD  CB  <var>d</var>  DB"],["set 3,(iy+<var>d</var>),h","FD  CB  <var>d</var>  DC"],["set 3,(iy+<var>d</var>),l","FD  CB  <var>d</var>  DD"],["set 3,(iy+<var>d</var>)","FD  CB  <var>d</var>  DE"],["set 3,(iy+<var>d</var>),a","FD  CB  <var>d</var>  DF"],["set 4,(iy+<var>d</var>),b","FD  CB  <var>d</var>  E0"],["set 4,(iy+<var>d</var>),c","FD  CB  <var>d</var>  E1"],["set 4,(iy+<var>d</var>),d","FD  CB  <var>d</var>  E2"],["set 4,(iy+<var>d</var>),e","FD  CB  <var>d</var>  E3"],["set 4,(iy+<var>d</var>),h","FD  CB  <var>d</var>  E4"],["set 4,(iy+<var>d</var>),l","FD  CB  <var>d</var>  E5"],["set 4,(iy+<var>d</var>)","FD  CB  <var>d</var>  E6"],["set 4,(iy+<var>d</var>),a","FD  CB  <var>d</var>  E7"],["set 5,(iy+<var>d</var>),b","FD  CB  <var>d</var>  E8"],["set 5,(iy+<var>d</var>),c","FD  CB  <var>d</var>  E9"],["set 5,(iy+<var>d</var>),d","FD  CB  <var>d</var>  EA"],["set 5,(iy+<var>d</var>),e","FD  CB  <var>d</var>  EB"],["set 5,(iy+<var>d</var>),h","FD  CB  <var>d</var>  EC"],["set 5,(iy+<var>d</var>),l","FD  CB  <var>d</var>  ED"],["set 5,(iy+<var>d</var>)","FD  CB  <var>d</var>  EE"],["set 5,(iy+<var>d</var>),a","FD  CB  <var>d</var>  EF"],["set 6,(iy+<var>d</var>),b","FD  CB  <var>d</var>  F0"],["set 6,(iy+<var>d</var>),c","FD  CB  <var>d</var>  F1"],["set 6,(iy+<var>d</var>),d","FD  CB  <var>d</var>  F2"],["set 6,(iy+<var>d</var>),e","FD  CB  <var>d</var>  F3"],["set 6,(iy+<var>d</var>),h","FD  CB  <var>d</var>  F4"],["set 6,(iy+<var>d</var>),l","FD  CB  <var>d</var>  F5"],["set 6,(iy+<var>d</var>)","FD  CB  <var>d</var>  F6"],["set 6,(iy+<var>d</var>),a","FD  CB  <var>d</var>  F7"],["set 7,(iy+<var>d</var>),b","FD  CB  <var>d</var>  F8"],["set 7,(iy+<var>d</var>),c","FD  CB  <var>d</var>  F9"],["set 7,(iy+<var>d</var>),d","FD  CB  <var>d</var>  FA"],["set 7,(iy+<var>d</var>),e","FD  CB  <var>d</var>  FB"],["set 7,(iy+<var>d</var>),h","FD  CB  <var>d</var>  FC"],["set 7,(iy+<var>d</var>),l","FD  CB  <var>d</var>  FD"],["set 7,(iy+<var>d</var>)","FD  CB  <var>d</var>  FE"],["set 7,(iy+<var>d</var>),a","FD  CB  <var>d</var>  FF"]]"""
def test():
    print("size_t i;")
    print("string asmStr;")
    for opcode in json.loads(inp):
        byteData = [v for v in opcode[1].replace("\t", " ").split(" ") if v != " " and v]
        hexByteData = []
        for b in byteData:
            if b == "<var>n</var>" or b == "<var>d</var>-$-2" or b == "<var>d</var>":
                hexByteData.append("0x01")
            elif b == "<var>nn</var>":
                hexByteData.append("0x01")
                hexByteData.append("0x00")
            else:
                hexByteData.append("0x"+b)
        pStr = opcode[0].replace(",", ", ").replace("<var>n</var>", "01h").replace("<var>nn</var>", "0100h").replace("<var>d</var>", "01h")

        print("i = 0;")
        print(f"asmStr = ( cast(ubyte[])[{', '.join(hexByteData)}] ).getInstruction(i).toAssembly;")
        print(f'assert(asmStr == "{pStr}",  "`"~ asmStr ~ "` != `{pStr}`");');
def tryInt(strr):
    try:
        int(strr)
        return True
    except:
        return False

reg16bits = ["af", "bc", "de", "hl", "ix", "iy", "sp", "pc"]
reg8bits = ["a", "f", "b", "c", "d", "e", "h", "l", "i", "r", "ixh", "ixl", "iyh", "iyl"]

def someWhatGenOps(ignore="", indirection=False):
    opcodes = []
    for opcode in json.loads(inp):
        odata = opcode[0]
        while "  " in odata:
            odata=odata.replace("  ", " ")
        odata = odata.split(" ")
        bdata = opcode[1]
        while "  " in bdata:
            bdata=bdata.replace("  ", " ")
        if bdata.startswith(ignore):
            bdata=bdata[len(ignore):]
        bdata=bdata.replace("<var>n</var>", "").replace("<var>nn</var>", "").replace("<var>d</var>", "").strip()

        if (len(odata) == 1):
            opcodes.append(odata[0].capitalize())
            print(f'instructions[0x{bdata}] = Instruction(InstructionType.{odata[0].capitalize()}, []);')
        else:
            operands = []
            for operand in odata[1].split(","):
                if operand == "af'":
                    operands.append(f"OR16(Register.SHADOW_AF")
                elif operand in reg8bits:
                    operands.append(f"OR8(Register.{operand.upper()})")
                elif operand in reg16bits:
                    operands.append(f"OR16(Register.{operand.upper()})")
                elif operand[1:-1] in reg16bits:
                    operands.append(f"OR16_LK(Register.{operand[1:-1].upper()})")
                elif tryInt(operand):
                    operands.append(f"PIMM8({operand})")
                elif operand == "(c)":
                    operands.append(f"OR8_LK(Register.C)")
                elif operand == "(<var>n</var>)":
                    operands.append("IMM8_LK")
                elif operand == "(<var>nn</var>)":
                    operands.append("IMM16_LK")
                elif operand == "<var>nn</var>":
                    operands.append("IMM16")
                elif operand == "<var>n</var>":
                    operands.append("IMM8")
                elif operand == "(ix+<var>d</var>)":
                    operands.append("IX")
                elif operand == "(iy+<var>d</var>)":
                    operands.append("IY")
                else:
                    print(operand, [operand[1:-1]], operand[1:-1] in reg16bits)
                    assert(0)
                opcodes.append(odata[0].capitalize())
            
            print(f'instructions[0x{bdata}] = Instruction(InstructionType.{odata[0].capitalize()}, [{", ".join(operands)}]' 
                    + (", null, true" if indirection else "") + ");")
    # print(",\n".join(set(opcodes)))

# someWhatGenOps("FD CB", True)
test()